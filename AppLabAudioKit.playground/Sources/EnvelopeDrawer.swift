import UIKit
import AVFoundation
import AudioUnit
import CoreAudioKit
import PlaygroundSupport

public class EnvelopeDrawer: UIImageView {
    var lastPoint = CGPoint.zero
    var opacity: CGFloat = 1.0
    var swiped = false
    var samples = 90
    var points:[CGPoint] = []
    
    public func initPathGenerator () {
        points = (0..<samples).map ({
            return CGPoint (x: (CGFloat ($0) / CGFloat (samples)) * self.frame.maxX, y: self.frame.midY)
        })
        self.redraw ()
    }
    
    override public func touchesBegan(_ touches: Set<UITouch>, with event: UIEvent?) {
        swiped = false
        lastPoint = touches.first!.location(in: self)
        for i in 0..<points.count {
            if points[i].x > lastPoint.x {
                let mid = (points[i].x + points[i-1].x)/2
                if mid < lastPoint.x {
                    changePoint (at: i, to: lastPoint.y)
                } else {
                    changePoint (at: i-1, to: lastPoint.y)
                }
                break
            }
        }
    }
    
    override public func touchesMoved(_ touches: Set<UITouch>, with event: UIEvent?) {
        swiped = true
        for touch in touches {
            let currentPoint = touch.location(in: self)
            for i in 0..<points.count {
                if points[i].x > currentPoint.x {
                    let mid = (points[i].x + points[i-1].x)/2
                    if mid < currentPoint.x {
                        changePoint (at: i, to: currentPoint.y)
                    } else {
                        changePoint (at: i-1, to: currentPoint.y)
                    }
                    break
                }
            }
        self.redraw()
        }
    }
    
    private func changePoint (at: Int, to: CGFloat) {
        let newy:CGFloat = to > self.frame.maxY ? self.frame.maxY : (to < self.frame.minY ? self.frame.minY : to)
        points.insert (CGPoint (x: points[at].x, y: newy), at: at)
        points.remove (at: at+1)
    }
    
    func redraw () {
        UIGraphicsBeginImageContext (self.frame.size)
        self.image?.draw (in: CGRect (x: 0, y: 0, width: self.frame.size.width, height: self.frame.size.height))
        
        for point in points {
            let path1 = UIBezierPath ()
            path1.lineWidth = 3
            path1.move(to: CGPoint (x: point.x, y: self.frame.maxY))
            path1.addLine(to: CGPoint (x: point.x, y: self.frame.minY))
            UIColor.black.set ()
            path1.close ()
            path1.stroke ()
            let path2 = UIBezierPath ()
            path2.lineWidth = 3
            path2.move (to: CGPoint (x: point.x, y: self.frame.maxY))
            path2.addLine (to: point)
            let delta = Float (point.y / self.frame.maxY)
            UIColor (colorLiteralRed: 255.0, green: delta, blue: 0.0,
                     alpha: 2).set ()
            path2.close ()
            path2.stroke ()
        }

        
        self.image = UIGraphicsGetImageFromCurrentImageContext ()
        self.alpha = opacity
        UIGraphicsEndImageContext ()
        
    }
    
    public func envelope () -> [Float] {
        return points.map {1.0 - Float ($0.y / self.frame.maxY)}
    }
    
    public func displayEnvelope (_ env:[Float]) {
        if env.count == points.count {
            self.points = zip (points, env).map ({
                return CGPoint (x:$0.0.x, y:CGFloat ($0.1))
            })
            self.redraw ()
        }
    }
    
    
    public static var GuitarEnvelope:[Float] = [0.511250019, 0.569999993, 0.607499957, 0.678750038, 0.743749976, 0.778750002, 0.827499986, 0.863749981, 0.898750007, 0.933750033, 0.948750019, 0.95875001, 0.964999974, 0.975000024, 0.975000024, 0.981249988, 0.983749986, 0.983749986, 0.983749986, 0.983749986, 0.97874999, 0.967499971, 0.953750014, 0.942499995, 0.925000012, 0.917500019, 0.898750007, 0.882499993, 0.855000019, 0.832499981, 0.806249976, 0.762499988, 0.721249998, 0.6875, 0.653750002, 0.61500001, 0.581250012, 0.550000012, 0.508749962, 0.488749981, 0.462499976, 0.428749979, 0.40625, 0.379999995, 0.356249988, 0.334999979, 0.323750019, 0.293749988, 0.276250005, 0.252499998, 0.235000014, 0.221249998, 0.207499981, 0.196250021, 0.181249976, 0.170000017, 0.161249995, 0.149999976, 0.139999986, 0.128750026, 0.117500007, 0.110000014, 0.10374999, 0.0962499976, 0.0912500024, 0.0849999785, 0.0799999833, 0.0687500238, 0.0662500262, 0.0587499738, 0.0562499762, 0.0537499785, 0.0487499833, 0.0475000143, 0.0450000167, 0.0437499881, 0.0400000215, 0.0387499928, 0.0375000238, 0.0350000262, 0.0325000286, 0.0299999714, 0.0299999714, 0.0287500024, 0.0262500048, 0.0249999762, 0.0237500072, 0.0212500095, 0.0187500119, 0.0187500119]
    public static var ViolinEnvelope:[Float] = [0.0712500215, 0.13499999, 0.196250021, 0.254999995, 0.336250007, 0.442499995, 0.688750029, 0.842499971, 0.90625, 1.0, 0.966250002, 0.938750029, 0.89625001, 0.86500001, 0.84375, 0.826250017, 0.8125, 0.793749988, 0.777500033, 0.758750021, 0.735000014, 0.720000029, 0.703750014, 0.694999993, 0.683750033, 0.675000012, 0.667500019, 0.65625, 0.642500043, 0.631250024, 0.622500002, 0.613749981, 0.602499962, 0.602499962, 0.59375, 0.587499976, 0.578750014, 0.569999993, 0.561249971, 0.551249981, 0.544999957, 0.539999962, 0.537500024, 0.532500029, 0.526250005, 0.522500038, 0.514999986, 0.50999999, 0.506250024, 0.502499998, 0.498749971, 0.495000005, 0.495000005, 0.492500007, 0.488749981, 0.483749986, 0.47874999, 0.47874999, 0.475000024, 0.475000024, 0.475000024, 0.475000024, 0.471249998, 0.471249998, 0.476249993, 0.477500021, 0.47874999, 0.47874999, 0.47874999, 0.47874999, 0.47874999, 0.480000019, 0.482500017, 0.488749981, 0.421249986, 0.366249979, 0.301249981, 0.254999995, 0.217499971, 0.157500029, 0.131250024, 0.108749986, 0.0899999738, 0.0724999905, 0.0550000072, 0.0412499905, 0.03125, 0.0212500095, 0.0137500167, 0.00999999046]
    public static var PianoEnvelope:[Float] = [0.0837500095, 0.209999979, 0.336250007, 0.578750014, 0.942499995, 1.0, 0.948750019, 0.829999983, 0.752499998, 0.738749981, 0.766250014, 0.827499986, 0.823750019, 0.803749979, 0.746250033, 0.701249957, 0.662500024, 0.628749967, 0.602499962, 0.5625, 0.523750007, 0.486249983, 0.462499976, 0.439999998, 0.421249986, 0.408749998, 0.388750017, 0.36500001, 0.342499971, 0.332499981, 0.3125, 0.298749983, 0.29124999, 0.272499979, 0.261250019, 0.252499998, 0.242500007, 0.233749986, 0.222500026, 0.209999979, 0.202499986, 0.1875, 0.180000007, 0.172500014, 0.162500024, 0.154999971, 0.14625001, 0.141250014, 0.132499993, 0.125, 0.120000005, 0.113749981, 0.106249988, 0.100000024, 0.09375, 0.0849999785, 0.0787500143, 0.0699999928, 0.0649999976, 0.0612499714, 0.0575000048, 0.0537499785, 0.0500000119, 0.0462499857, 0.0437499881, 0.0387499928, 0.0350000262, 0.0299999714, 0.0262500048, 0.0237500072, 0.0224999785, 0.0224999785, 0.0224999785, 0.0199999809, 0.0187500119, 0.0162500143, 0.0137500167, 0.0137500167, 0.0112500191, 0.00999999046, 0.00625002384, 0.00375002623, 0.00249999762, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
    public static var ClarinetEnvelope:[Float] = [0.00999999046, 0.157500029, 0.337499976, 0.555000007, 0.792500019, 0.847499967, 0.837499976, 0.8125, 0.748749971, 0.711250007, 0.6875, 0.669999957, 0.65625, 0.642500043, 0.639999986, 0.639999986, 0.633749962, 0.629999995, 0.628749967, 0.627499998, 0.625, 0.623749971, 0.623749971, 0.621250033, 0.621250033, 0.620000005, 0.620000005, 0.618749976, 0.618749976, 0.618749976, 0.616250038, 0.612500012, 0.612500012, 0.611250043, 0.611250043, 0.611250043, 0.611250043, 0.611250043, 0.611250043, 0.608749986, 0.608749986, 0.607499957, 0.607499957, 0.607499957, 0.607499957, 0.607499957, 0.605000019, 0.60374999, 0.602499962, 0.602499962, 0.602499962, 0.602499962, 0.600000024, 0.598749995, 0.598749995, 0.598749995, 0.598749995, 0.598749995, 0.598749995, 0.598749995, 0.598749995, 0.598749995, 0.600000024, 0.60374999, 0.60374999, 0.60374999, 0.60374999, 0.60374999, 0.60374999, 0.60374999, 0.60374999, 0.605000019, 0.606249988, 0.606249988, 0.601249993, 0.598749995, 0.591250002, 0.578750014, 0.555000007, 0.487500012, 0.443750024, 0.36500001, 0.338750005, 0.277499974, 0.236249983, 0.175000012, 0.120000005, 0.0787500143, 0.0387499928, 0.00625002384]
    public static var TromboneEnvelope:[Float] = [0.0, 0.0512499809, 0.133750021, 0.186249971, 0.283749998, 0.398750007, 0.536249995, 0.611250043, 0.651250005, 0.636250019, 0.616250038, 0.600000024, 0.587499976, 0.569999993, 0.561249971, 0.548750043, 0.527500033, 0.50999999, 0.496249974, 0.481249988, 0.454999983, 0.441250026, 0.417500019, 0.403750002, 0.397499979, 0.397499979, 0.397499979, 0.397499979, 0.397499979, 0.397499979, 0.397499979, 0.397499979, 0.397499979, 0.397499979, 0.397499979, 0.399999976, 0.399999976, 0.399999976, 0.401250005, 0.402499974, 0.402499974, 0.402499974, 0.403750002, 0.404999971, 0.407500029, 0.407500029, 0.407500029, 0.407500029, 0.407500029, 0.407500029, 0.410000026, 0.415000021, 0.421249986, 0.425000012, 0.428749979, 0.432500005, 0.435000002, 0.435000002, 0.4375, 0.442499995, 0.444999993, 0.448750019, 0.451250017, 0.454999983, 0.457499981, 0.461250007, 0.462499976, 0.464999974, 0.46875, 0.473749995, 0.473749995, 0.476249993, 0.476249993, 0.453750014, 0.417500019, 0.394999981, 0.366249979, 0.339999974, 0.298749983, 0.25999999, 0.233749986, 0.206250012, 0.182500005, 0.153750002, 0.125, 0.100000024, 0.0724999905, 0.0450000167, 0.845000029, 0.0124999881]
    
}
